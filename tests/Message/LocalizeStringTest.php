<?php
namespace Drupal\drupal_helpers\Message;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-06-24 at 10:31:27.
 */
class LocalizeStringTest extends \PHPUnit_Framework_TestCase {
  /**
   * @var LocalizeString
   */
  protected $object;

  // ------------------------------------------------------------------
  //region Setup Fixtures

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new LocalizeString;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
  }

  //endregion
  // ------------------------------------------------------------------
  //region Data Providers

  public function textProvider() {
    return array(
      ['Hello world'],
      ['Hello @world'],
      ['@greeting !world'],
    );
  }

  public function varsProvider() {
    return array(
      ['foobar', []],
      [['@world' => 'Earth'], ['@world' => 'Earth']],
      [
        ['@greeting' => "G'day", '@world' => 'Earth'],
        ['@greeting' => "G'day", '@world' => 'Earth'],
      ],
    );
  }

  public function varsTwiceProvider() {
    return array(
      ['foo', 'bar', []],
      ['foo', ['bar' => 'baz'], ['bar' => 'baz']],
      [['foo' => 'bar'], 'baz', ['foo' => 'bar']],
      [['@world' => 'Earth'], [], ['@world' => 'Earth']],
      [
        ['@greeting' => 'Wassup'],
        ['@world' => 'Mars'],
        ['@greeting' => 'Wassup', '@world' => 'Mars'],
      ],
      [
        ['@greeting' => 'Wassup', '@world' => 'Mars'],
        ['@foobar' => 'Baz'],
        ['@greeting' => 'Wassup', '@world' => 'Mars', '@foobar' => 'Baz'],
      ],
    );
  }

  public function localizeProvider() {
    return array(
      ['Hello @world', ['!world' => 'Earth'], 'Hello @world'],
      ['Hello !world', ['!world' => 'Earth'], 'Hello Earth'],
      [
        '@greeting @world',
        ['@greeting' => "G'day", '@world' => 'Earth'],
        "G'day Earth",
      ],
    );
  }

  //endregion
  // ------------------------------------------------------------------

  /**
   * @covers Drupal\drupal_helpers\Message\LocalizeString::getVars
   */
  public function testGetVars() {
    $this->assertInternalType('array', $this->object->getVars());
  }

  /**
   * @covers Drupal\drupal_helpers\Message\LocalizeString::resetVars
   */
  public function testResetVars() {
    $this->object->setVars(['foo' => 'bar'])->resetVars();
    $this->assertEmpty($this->object->getVars());
    $this->assertInternalType('array', $this->object->getVars());
  }

  /**
   * @covers Drupal\drupal_helpers\Message\LocalizeString::getText
   */
  public function testGetText() {
    $this->assertInternalType('string', $this->object->getText());
  }

  /**
   * @covers Drupal\drupal_helpers\Message\LocalizeString::setText
   * @covers Drupal\drupal_helpers\Message\LocalizeString::getText
   * @dataProvider textProvider
   *
   * @param $text
   */
  public function testSetTextGetText($text) {
    $this->assertEquals($text, $this->object->setText($text)->getText());
  }

  /**
   * @covers       Drupal\drupal_helpers\Message\LocalizeString::setVars
   * @dataProvider varsTwiceProvider
   *
   * @param array $varsOne
   * @param array $varsTwo
   * @param array $expected
   *
   * @internal param mixed $vars
   */
  public function testSetVarsTwice($varsOne, $varsTwo, $expected) {
    $this->object->setVars($varsOne);
    $this->object->setVars($varsTwo);
    $this->assertEquals($expected, $this->object->getVars());
  }

  /**
   * @covers       Drupal\drupal_helpers\Message\LocalizeString::getLocalized
   * @dataProvider localizeProvider
   *
   * @param string $text
   * @param mixed $vars
   * @param string $expected
   */
  public function testGetLocalized($text, $vars, $expected) {
    $this->object->setText($text)->setVars($vars);
    $this->assertEquals($expected, $this->object->getLocalized());
  }
}
